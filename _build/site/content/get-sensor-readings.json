{"version":2,"kind":"Notebook","sha256":"3059357812159a820d09dbbb03fecf8dc97ee24f5fa0ab50590eb545e9f16890","slug":"get-sensor-readings","location":"/twinleaf_calibration/3_code_twinleaf_calibration/get_sensor_readings.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","display_name":"datascience","language":"python"},"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"get_sensor_readings.ipynb","url":"/get_sensor_readings-2273f7605c91f1935ed29d73c2ade7f8.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ftH6uCtRFJ"}],"key":"G9NpVVe2My"}],"key":"ZOV1TGTMx8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import serial\nimport time\nimport csv\nfrom datetime import datetime\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Optional: set pandas to show all columns\npd.set_option(\"display.max_columns\", None)\n","key":"NDJwUlyXx8"},{"type":"output","id":"XfXH4niGGLJ0KT3uAxRzI","data":[],"key":"EP3iUbYHk0"}],"key":"Ctelp6Mhz3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read sensors and write to csv files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ekm5Lv7PGN"}],"key":"tx2IzGNHWp"}],"key":"BtdPZVlSjk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Adjust port as needed, e.g., \"COM3\" or \"/dev/ttyUSB0\"\nSERIAL_PORT = \"COM4\"\nBAUD_RATE = 9600\nCSV_FILENAME = f\"env_data_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv\"\n\nser = serial.Serial(SERIAL_PORT, BAUD_RATE, timeout=1)\ntime.sleep(2)  # Wait for Arduino to reset\n\n# Open CSV for writing\nwith open(CSV_FILENAME, mode='w', newline='') as file:\n    writer = csv.writer(file)\n    writer.writerow([\"timestamp\", \"environment\", \"temperature_C\", \"humidity_percent\", \"lux\"])\n\n    print(f\"Logging to {CSV_FILENAME}... Press Ctrl+C to stop.\\n\")\n\n    try:\n        while True:\n            line = ser.readline().decode(\"utf-8\", errors=\"ignore\").strip()\n            if not line:\n                continue\n            try:\n                parts = line.split(\",\")\n                if len(parts) != 4:\n                    print(\"Skipping malformed line:\", line)\n                    continue\n\n                channel = int(parts[0])\n                temp = float(parts[1])\n                humidity = float(parts[2])\n                lux = float(parts[3])\n\n                timestamp = datetime.now().isoformat()\n                environment = \"Environment 1\" if channel == 1 else \"Environment 2\"\n\n                writer.writerow([timestamp, environment, temp, humidity, lux])\n                print(f\"{timestamp} | {environment} | Temp: {temp:.1f}°C | Hum: {humidity:.1f}% | Lux: {lux:.1f}\")\n            except ValueError:\n                print(\"Parsing error for line:\", line)\n\n    except KeyboardInterrupt:\n        print(\"\\nStopped logging.\")\n        ser.close()\n","key":"f6syRP8o4K"},{"type":"output","id":"k3gceIVHW46R9HGNfKWHT","data":[{"name":"stdout","output_type":"stream","text":"Logging to env_data_20250402_081200.csv... Press Ctrl+C to stop.\n\nSkipping malformed line: Setup complete. Starting loop...\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\nSkipping malformed line: ---------- New Reading Loop ----------\nSkipping malformed line: Selecting multiplexer channel 1\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 1\nSkipping malformed line: Selecting multiplexer channel 2\nSkipping malformed line: Initializing VEML7700...\nSkipping malformed line: ⚠️  VEML7700 NOT FOUND on channel 2\n"}],"key":"jRXqIvu9RP"}],"key":"llHcOlpSCq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PXplynWyrR"}],"key":"K2katy44Nw"}],"key":"TxVIfLCPxA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Replace with the latest CSV filename or keep reusing one\ncsv_to_plot = CSV_FILENAME  # or hardcode: 'env_data_20250325_134200.csv'\n\ndf = pd.read_csv(csv_to_plot)\ndf[\"timestamp\"] = pd.to_datetime(df[\"timestamp\"])\n\n# Optional: show first few rows\ndf.head()\n\n# Plot Temperature\nplt.figure(figsize=(10, 4))\nfor env in df[\"environment\"].unique():\n    env_df = df[df[\"environment\"] == env]\n    plt.plot(env_df[\"timestamp\"], env_df[\"temperature_C\"], label=env)\nplt.title(\"Temperature Over Time\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"°C\")\nplt.legend()\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n# Plot Humidity\nplt.figure(figsize=(10, 4))\nfor env in df[\"environment\"].unique():\n    env_df = df[df[\"environment\"] == env]\n    plt.plot(env_df[\"timestamp\"], env_df[\"humidity_percent\"], label=env)\nplt.title(\"Humidity Over Time\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"%\")\nplt.legend()\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n# Plot Lux\nplt.figure(figsize=(10, 4))\nfor env in df[\"environment\"].unique():\n    env_df = df[df[\"environment\"] == env]\n    plt.plot(env_df[\"timestamp\"], env_df[\"lux\"], label=env)\nplt.title(\"Light (Lux) Over Time\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Lux\")\nplt.legend()\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n","key":"QZatBeoMMp"},{"type":"output","id":"uhkC3OY9t3Uc-2LVR8naQ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b4a4e6ec57e6bfe20e238f75184b6cbe","path":"/b4a4e6ec57e6bfe20e238f75184b6cbe.png"},"text/plain":{"content":"<Figure size 1000x400 with 1 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ef76a2a1e80db75a7509e187e042285e","path":"/ef76a2a1e80db75a7509e187e042285e.png"},"text/plain":{"content":"<Figure size 1000x400 with 1 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b3744d7b5b6b6f0bdbce455552984bd8","path":"/b3744d7b5b6b6f0bdbce455552984bd8.png"},"text/plain":{"content":"<Figure size 1000x400 with 1 Axes>","content_type":"text/plain"}}}],"key":"SkYdOh1Pn2"}],"key":"A0bNuR4yWM"}],"key":"XlAYL36S38"},"references":{"cite":{"order":[],"data":{}}}}